# Configuration du port du serveur
server.port=8082

# Configuration de la base de données MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/societe_db
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

# Active le config server
spring.cloud.config.enabled=true

# Configurations Hibernate / JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Configuration de Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Groupe du consommateur Kafka
spring.kafka.consumer.group-id=societe-group

# Désérialiseur de la clé (string)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Désérialiseur avec gestion d’erreur pour la valeur
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Indiquer au ErrorHandlingDeserializer d’utiliser le JsonDeserializer derrière
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Spécifier la classe cible à désérialiser
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.societeservice.Dto.EmployeeDTO

# Accepter les types de package sans restriction
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Nom du topic (tu peux l’utiliser dans @KafkaListener via ${spring.kafka.topic.name})
spring.kafka.topic.name=societe-topic
