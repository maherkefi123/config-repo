# Configuration du port du serveur
server.port=8082

# Configuration de la base de données MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/societe_db
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

# Active le config server
spring.cloud.config.enabled=true

# URL du serveur de configuration (Assure-toi que cette URL est correcte)
spring.config.import=configserver:http://localhost:8888

# Configurations Hibernate / JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Configuration de Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=societe-group

# Désérialisation Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Indiquer au ErrorHandlingDeserializer d’utiliser le JsonDeserializer derrière
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Spécifier la classe cible à désérialiser
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.societeservice.Dto.EmployeeDTO

# Accepter les types de package sans restriction
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Nom du topic Kafka (utilisé dans @KafkaListener)
spring.kafka.topic.name=societe-topic

# Configurations Spring Cloud Config Server (pour accéder aux fichiers de configuration)
spring.cloud.config.server.git.uri=https://github.com/ton-utilisateur/config-repo
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.searchPaths=societe-properties

# Spring Cloud Config : Config serveur de secours (si un fichier n'est pas trouvé dans Git)
# spring.cloud.config.server.native.searchLocations=file:///path/to/your/config/folder
